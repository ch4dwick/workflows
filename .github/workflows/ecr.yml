name: AWS ECR Workflow
on:
  workflow_call:
    inputs:
      ECR_REGISTRY:
        required: true
        type: string
      ECR_REPO:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  generate_tag:
    uses: ch4dwick/workflows/.github/workflows/docker-tag.yml@main
    with:
      ECR_REGISTRY: '${secrets.AWS_ACCOUNT_ID}.dkr.ecr.ap-southeast-1.amazonaws.com'
      ECR_REPO: 'payments-gateways'
      AWS_REGION: 'ap-southeast-1'
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  build-ecr:
    runs-on: ubuntu-latest
    needs: generate_tag
    steps:
      - name: Check out the repo
        id: checkout
        uses: actions/checkout@v3
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Configure AWS credentials
        id: config_creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build_image
        env:
          ECR_REGISTRY: ${{ inputs.ECR_REGISTRY }}
          ECR_REPOSITORY: "${{ inputs.ECR_REPO }}"
          IMAGE_TAG: ${{ output.generate_tag.tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$steps.vars.outputs.tag .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_
  